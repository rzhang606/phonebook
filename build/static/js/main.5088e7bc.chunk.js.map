{"version":3,"sources":["components/Filter.js","services/Persons.js","reducers/errorReducer.js","reducers/personReducer.js","reducers/notifReducer.js","services/Users.js","reducers/usersReducer.js","reducers/store.js","handlers/personHandler.js","components/People.js","components/Notification.js","components/Error.js","components/FormField.js","components/Togglable.js","components/LoginForm.js","components/PersonForm.js","components/AllUsers.js","services/Login.js","App.js","index.js"],"names":["Filter","input","inputHandler","value","onChange","baseURL","token","getAll","console","log","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","remove","id","delete","update","put","setToken","newToken","createErrAction","err","dispatch","set_action","setTimeout","createHTTPErrAction","message","val","type","errorReducer","state","action","fetchPStore","personService","catch","personsReducer","createNotif","notifReducer","usersReducer","reducers","combineReducers","people","personReducer","error","notification","users","personStore","createStore","applyMiddleware","thunk","getState","publishPerson","nPerson","store","duplicate","filter","person","name","length","number","window","confirm","r","deletePerson","find","element","People","persons","useState","setNewFilter","newPersons","toLowerCase","includes","Table","striped","map","key","onClick","event","target","Notification","className","Error","errState","FormField","title","Form","Group","Label","Control","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","Button","buttonLabel","children","LoginForm","login","username","setUsername","password","setPassword","onSubmit","preventDefault","PersonForm","user","newName","setNewName","newNumber","setNewNumber","AllUsers","creds","res","App","setUser","loginService","localStorage","setItem","JSON","stringify","useEffect","userService","loggedUserJSON","getItem","parse","removeItem","renderApp","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.5088e7bc.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({input, inputHandler}) => {\n    return (\n        <form>\n            <div>\n                Filter by name: <input value={input} onChange={inputHandler}/>\n            </div>\n        </form>\n    )\n}\n\nexport default Filter;","import axios from 'axios';\nconst baseURL = '/api/persons'; //proxy redirects (from package.json)\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    console.log('Getting all from server ... ');\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n}\n\nconst create = async (newObject) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseURL, newObject, config);\n    return response.data;\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseURL}/${id}`);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nexport default {getAll, create, remove, update, setToken}","/**\n * Reducer\n */\nconst errorReducer = (state = '', action) => {\n    switch(action.type) {\n        case 'E_SET':\n            return action.data;\n        default:\n            return state;\n    }\n}\n\n/**\n * Action Creator\n */\nexport const createErrAction = (err) => {\n    return (dispatch) => {\n        dispatch(set_action(err));\n        setTimeout(() => dispatch(set_action('')), 5000);\n    }\n}\n\nexport const createHTTPErrAction = (err) => {\n    return (dispatch) => {\n        dispatch(set_action(err.message));\n        setTimeout(() => dispatch(set_action('')), 5000);\n    }\n}\n\n/**\n * Actions\n */\n\nconst set_action = (val) => {\n    return {\n        type: 'E_SET',\n        data: val\n    }\n}\n\nexport default errorReducer;","import personService from '../services/Persons';\nimport { createHTTPErrAction } from './errorReducer';\n\n/**\n * Reducer\n */\nconst personsReducer = (state = [], action) => {\n    console.log('Action:', action);\n    switch(action.type) {\n        case 'P_SET':\n            return action.data;\n        default:\n            return state;\n    }\n}\n\n/**\n * Action Creators\n */\nconst set_action = (people) => {\n    return {\n        type: 'P_SET',\n        data: people\n    }\n}\n\nexport const fetchPStore = () => {\n    return (dispatch) => {\n        personService.getAll()\n            .then( response => dispatch(set_action(response)))\n            .catch( err => dispatch(createHTTPErrAction(err)));\n    }\n}\n\nexport default personsReducer;","/**\n * Reducer\n */\nconst notifReducer = (state='', action) => {\n    switch(action.type) {\n        case 'N_SET':\n            return action.data;\n        default:\n            return state;\n    }    \n}\n\n/**\n * Action Creator\n */\nexport const createNotif = (message) => {\n    return (dispatch) => {\n        dispatch(set_action(message));\n        setTimeout(() => dispatch(set_action('')), 5000);\n    }\n}\n\n /**\n  * Action\n  */\n const set_action = (val) => {\n     return {\n         type: 'N_SET',\n         data: val\n     }\n }\n\n  export default notifReducer;","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getUsers = () => {\n    console.log(\"Retrieving users ...\");\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nexport default { getUsers };","import userService from '../services/Users'\nimport { createHTTPErrAction } from './errorReducer'\n\n/**\n * Reducer\n */\nconst usersReducer = (state = [], action) => {\n    console.log('Action:', action);\n    switch(action.type) {\n        case 'U_SET':\n            return action.data;\n        default:\n            return state;\n    }\n}\n\n/**\n * Action Creator\n */\n\nconst set_action = (users) => {\n    return {\n        type: 'U_SET',\n        data: users\n    }\n}\n\nexport const fetchUStore = () => {\n    return (dispatch) => {\n        userService.getUsers()\n            .then(response => dispatch(set_action(response)))\n            .catch( err => dispatch(createHTTPErrAction(err)));\n    }\n}\n\nexport default usersReducer;","import  {createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport personReducer from './personReducer';\nimport errorReducer from './errorReducer';\nimport notifReducer from './notifReducer';\nimport usersReducer from './usersReducer';\n\nconst reducers = combineReducers({\n    people: personReducer,\n    error: errorReducer,\n    notification: notifReducer,\n    users: usersReducer\n});\nconst personStore = createStore(\n    reducers,\n    applyMiddleware(thunk)\n);\nconsole.log('State:', personStore.getState());\n\nexport default personStore;","\nimport personService from '../services/Persons';\nimport store from '../reducers/store'\nimport { createErrAction } from '../reducers/errorReducer';\nimport { createNotif } from '../reducers/notifReducer';\nimport { fetchPStore } from '../reducers/personReducer';\n\n/**\n * Event Handlers\n */\nexport const publishPerson = async (nPerson) => {\n    const people = store.getState().people;\n    const duplicate = people.filter(person => person.name === nPerson.name);\n    if(duplicate.length !== 0) { //if record exists\n        if(duplicate[0].number === nPerson.number) { //duplicate\n            store.dispatch(createErrAction(`${nPerson.name} is already added to phonebook.`));\n        } else { //update number\n            const confirmation = window.confirm(`Update ${nPerson.name}'s number with ${nPerson.number}?`);\n            if(confirmation) {\n                console.log('Updating new number');\n                try{\n                    const r = await personService.update(duplicate[0].id, nPerson);\n                    store.dispatch(fetchPStore());\n                    store.dispatch(createNotif(`${r.name}'s number has been updated`));\n                } catch (err) {\n                    console.log(err);\n                    store.dispatch(createErrAction(`Update unsuccessful: ${err}`));\n                }\n            }\n        }\n    } else {    // add new record\n        try{\n            const r = await personService.create(nPerson);\n            store.dispatch(fetchPStore());\n            store.dispatch(createNotif(`${r.name} has been added`));\n        } catch (err) {\n            console.log(err);\n            store.dispatch(createErrAction(`${nPerson.name} could not be added: ${err}`));\n        }\n    }\n}\n\nexport const deletePerson = async (id) => {\n    const people = store.getState().people;\n\n    const person = people.find(element => element.id === id);\n    if(!person) {\n        store.dispatch(createErrAction('Does not exist'));\n    }\n    const result = window.confirm(`Delete ${person.name}'s record?`);\n    if(result) {\n        console.log('Deleting: ', id, person.name);\n        try {\n            await personService.remove(id);\n            store.dispatch(fetchPStore());\n            store.dispatch(createNotif('Successfully Deleted'));\n        } catch (err) {\n            store.dispatch(createErrAction(`${err}`));\n        }\n    }\n}","import React, { useState } from 'react';\nimport Filter from './Filter';\nimport { deletePerson } from '../handlers/personHandler';\nimport { Table } from 'react-bootstrap'\n\nconst People = ({persons = []}) => {\n    const [ filter, setNewFilter ] = useState(''); // filter\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value);\n    }\n\n    let newPersons = persons;\n    if(filter !== \"\") {\n        newPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())); \n    }\n    return (\n        <div>\n            <Table striped><tbody>\n                    {newPersons.map((person) =>\n                        <tr key={person.name}>\n                            <td>\n                                {person.name}\n                            </td>\n                            <td>\n                                {person.number}\n                            </td>\n                            <td>\n                                <button onClick={() => deletePerson(person.id)}>delete</button>\n                            </td>\n                        </tr>\n                    )}\n            </tbody></Table>\n            <Filter input={filter} inputHandler={handleFilterChange}/>\n        </div>\n        \n    )\n}\n\nexport default People","import React from 'react';\nimport store from '../reducers/store';\n\n\nconst Notification = () => {\n    const message = store.getState().notification;\n    if(message === '') {\n        return null;\n    }\n\n    return (\n        <div className='notification'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react'\nimport store from '../reducers/store';\n\nconst Error = ({message}) => {\n    const errState = store.getState().error;\n\n    if(errState === '') {\n        return null;\n    }\n    \n\n    return (\n        <div className='error'>\n            {errState}\n        </div>\n    )\n}\n\nexport default Error;","import React from 'react'\nimport { Form } from 'react-bootstrap'\n\nconst FormField = ({title, input, inputHandler}) => {\n    return (\n        <Form.Group>\n            <Form.Label>{title}</Form.Label>\n            <Form.Control\n                type='text'\n                value={input}\n                onChange={inputHandler}\n            />\n        </Form.Group>\n    )\n}\n\nexport default FormField","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = (props) => {\n    const [ visible, setVisible ] = useState(false);\n\n    //inline css\n    const hideWhenVisible = { display: visible ? 'none' : ''}\n    const showWhenVisible = { display: visible ? '' : 'none'}\n\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    }\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <Button onClick={toggleVisibility}>Cancel</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Togglable;","import React, {useState} from 'react'\nimport FormField from './FormField'\nimport Togglable from './Togglable'\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = ({login}) => {\n    const [ username, setUsername ] = useState(''); // form input username\n    const [ password, setPassword ] = useState('');\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        console.log('Logging in for', username);\n\n        login({\n            username: username,\n            password: password\n        });\n\n        setUsername('');\n        setPassword('');\n    }\n\n    return (\n        <Togglable buttonLabel='Login here'>\n            <Form onSubmit={handleLogin}>\n                <FormField title={'Username'} input={username} inputHandler={handleUsernameChange}/>\n                <FormField title={'Password'} input={password} inputHandler={handlePasswordChange}/>\n                <Button type='submit'>Login</Button>\n            </Form>\n        </Togglable>\n    )\n}\n\nexport default LoginForm","import React, {useState} from 'react'\nimport FormField from './FormField'\nimport Togglable from './Togglable'\nimport { publishPerson } from '../handlers/personHandler';\nimport { Form, Button } from 'react-bootstrap'\n\nconst PersonForm = ({user}) => {\n    const [ newName, setNewName ] = useState(''); // form input name\n    const [ newNumber, setNewNumber ] = useState(''); // form input number\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n\n    const createPerson = (event) => {\n        event.preventDefault();\n        publishPerson({ \n            name: newName,\n            number: newNumber\n        });\n\n        setNewName('');\n        setNewNumber('');\n\n    }\n    \n    return (\n        <Togglable buttonLabel='Create New Note'>\n            <h2>Add New as {user.name}:</h2>\n            <Form onSubmit={createPerson}>\n                <FormField title=\"Name\" input={newName} inputHandler={handleNameChange} />\n                <FormField title=\"Number\" input={newNumber} inputHandler={handleNumberChange} />          \n                <Button type=\"submit\">add</Button>\n            </Form>\n        </Togglable>\n    )\n}\n\nexport default PersonForm","import React from 'react'\nimport Togglable from './Togglable'\nimport store from '../reducers/store'\n\n\nconst AllUsers = () => {\n\n    const users = store.getState().users;\n    console.log(\"Users: \", users)\n\n    return (\n        <Togglable buttonLabel='All Users'>\n            <ul>\n                {users.map((user) =>\n                    <li key={user.username}>{user.name}: {user.username}</li>\n                )}\n            </ul>\n        </Togglable>\n    )\n}\n\nexport default AllUsers","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async creds => {\n    const res = await axios.post(baseUrl, creds);\n    return res.data;\n}\n\nexport default { login };","import React, { useState, useEffect } from 'react'\nimport People from './components/People'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport LoginForm from './components/LoginForm'\nimport PersonForm from './components/PersonForm'\nimport AllUsers from './components/AllUsers'\n\nimport personService from './services/Persons'\nimport loginService from './services/Login'\n\nimport store from './reducers/store';\nimport { fetchPStore } from './reducers/personReducer'\nimport { createErrAction } from './reducers/errorReducer';\nimport { createNotif } from './reducers/notifReducer';\nimport { fetchUStore } from './reducers/usersReducer'\n\nimport { Button } from 'react-bootstrap'\n\n\nconst App = () => {\n\n    const [ user, setUser ] = useState(null);\n\n    //uses username and password to login, then saves the retrieved token and user details to 'user' field\n    const login = async (creds) => {\n\n        try{\n            const user = await loginService.login(creds);\n\n            //save token to local storage\n            window.localStorage.setItem(\n                'loggedPersonUser', JSON.stringify(user)\n            );\n            personService.setToken(user.token);\n            setUser(user);\n            store.dispatch(createNotif(`Logged in as ${user.name}`));\n        } catch (ex) {\n            store.dispatch(createErrAction('Wrong Credentials'));\n        }\n\n        \n    }\n    const logOut = () => {\n        window.localStorage.removeItem('loggedPersonUser');\n        personService.setToken(null);\n        setUser(null);\n        store.dispatch(createNotif('Logged Out'));\n    }\n\n    /**\n     * Effects\n     */\n    //initial fetching of persons\n    useEffect(() => {\n        console.log('Fetching data ... ');\n        store.dispatch(fetchPStore());\n        store.dispatch(fetchUStore());\n    }, []) // empty array tells it to only run initially\n\n    //check for logged in user\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedPersonUser');\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON);\n            setUser(user);\n            store.dispatch(createNotif(`Logged in as ${user.name}`));\n            personService.setToken(user.token)\n        }\n    }, [])\n\n    return (\n        <div className='container'>\n            <h2>Phonebook</h2>\n            <Notification/>\n            <Error/>\n            {user === null ?\n                <div>\n                    <LoginForm login={login} />\n                    <AllUsers/>\n                    <h2>Please log in to view numbers</h2>\n                </div>\n                :\n                <div>\n                    <PersonForm user={user}/>\n                    <Button onClick={logOut}>Log Out</Button>\n                    <h2>Numbers</h2>\n                    <People persons={store.getState().people}/>\n                </div>}\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport { Provider } from 'react-redux';\nimport personStore from './reducers/store';\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={personStore}>\n            <App/>\n        </Provider>\n        , document.getElementById('root'));\n}\n\nrenderApp();\npersonStore.subscribe(renderApp);"],"sourceRoot":""}