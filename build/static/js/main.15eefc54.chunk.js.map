{"version":3,"sources":["components/Filter.js","services/Persons.js","reducers/errorReducer.js","reducers/personReducer.js","reducers/notifReducer.js","services/Users.js","reducers/usersReducer.js","reducers/store.js","handlers/personHandler.js","components/People.js","components/Notification.js","components/Error.js","components/FormField.js","components/Togglable.js","components/LoginForm.js","components/PersonForm.js","components/UserForm.js","services/Login.js","App.js","index.js"],"names":["Filter","input","inputHandler","value","onChange","baseURL","token","getAll","console","log","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","remove","id","delete","update","put","setToken","newToken","createErrAction","err","dispatch","set_action","setTimeout","createHTTPErrAction","message","val","type","errorReducer","state","action","fetchPStore","personService","catch","personsReducer","createNotif","notifReducer","getUsers","addUser","userObject","name","usersReducer","reducers","combineReducers","people","personReducer","error","notification","users","personStore","createStore","applyMiddleware","thunk","getState","publishPerson","nPerson","store","duplicate","filter","person","length","number","window","confirm","r","deletePerson","find","element","People","persons","useState","setNewFilter","newPersons","toLowerCase","includes","Table","striped","map","key","onClick","event","target","Notification","className","Error","errState","FormField","title","Form","Group","Label","Control","Togglable","props","hideWhenVisible","display","visible","showWhenVisible","style","Button","toggleVisibility","buttonLabel","children","LoginForm","login","username","setUsername","password","setPassword","setVisible","onSubmit","preventDefault","PersonForm","user","newName","setNewName","newNumber","setNewNumber","UserForm","newUsername","setNewUsername","newPassword","setNewPassword","userService","creds","res","App","setUser","loginService","localStorage","setItem","JSON","stringify","useEffect","loggedUserJSON","getItem","parse","removeItem","renderApp","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.15eefc54.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({input, inputHandler}) => {\n    return (\n        <form>\n            <div>\n                Filter by name: <input value={input} onChange={inputHandler}/>\n            </div>\n        </form>\n    )\n}\n\nexport default Filter;","import axios from 'axios';\nconst baseURL = '/api/persons'; //proxy redirects (from package.json)\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    console.log('Getting all from server ... ');\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n}\n\nconst create = async (newObject) => {\n    const config = {\n        headers: { Authorization: token },\n    }\n    const response = await axios.post(baseURL, newObject, config);\n    return response.data;\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseURL}/${id}`);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject);\n    return request.then(response => response.data);\n}\n\nexport default {getAll, create, remove, update, setToken}","/**\n * Reducer\n */\nconst errorReducer = (state = '', action) => {\n    switch(action.type) {\n        case 'E_SET':\n            return action.data;\n        default:\n            return state;\n    }\n}\n\n/**\n * Action Creator\n */\nexport const createErrAction = (err) => {\n    return (dispatch) => {\n        dispatch(set_action(err));\n        setTimeout(() => dispatch(set_action('')), 5000);\n    }\n}\n\nexport const createHTTPErrAction = (err) => {\n    return (dispatch) => {\n        dispatch(set_action(err.message));\n        setTimeout(() => dispatch(set_action('')), 5000);\n    }\n}\n\n/**\n * Actions\n */\n\nconst set_action = (val) => {\n    return {\n        type: 'E_SET',\n        data: val\n    }\n}\n\nexport default errorReducer;","import personService from '../services/Persons';\nimport { createHTTPErrAction } from './errorReducer';\n\n/**\n * Reducer\n */\nconst personsReducer = (state = [], action) => {\n    console.log('Action:', action);\n    switch(action.type) {\n        case 'P_SET':\n            return action.data;\n        default:\n            return state;\n    }\n}\n\n/**\n * Action Creators\n */\nconst set_action = (people) => {\n    return {\n        type: 'P_SET',\n        data: people\n    }\n}\n\nexport const fetchPStore = () => {\n    return (dispatch) => {\n        personService.getAll()\n            .then( response => dispatch(set_action(response)))\n            .catch( err => dispatch(createHTTPErrAction(err)));\n    }\n}\n\nexport default personsReducer;","/**\n * Reducer\n */\nconst notifReducer = (state='', action) => {\n    switch(action.type) {\n        case 'N_SET':\n            return action.data;\n        default:\n            return state;\n    }    \n}\n\n/**\n * Action Creator\n */\nexport const createNotif = (message) => {\n    return (dispatch) => {\n        dispatch(set_action(message));\n        setTimeout(() => dispatch(set_action('')), 5000);\n    }\n}\n\n /**\n  * Action\n  */\n const set_action = (val) => {\n     return {\n         type: 'N_SET',\n         data: val\n     }\n }\n\n  export default notifReducer;","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getUsers = () => {\n    console.log(\"Retrieving users ...\");\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\n/**\n * \n * @param {Object} userObject \n * Fields: name, username, password\n */\nconst addUser = async (userObject) => {\n    console.log(\"Adding new user: \", userObject.name);\n    const response = await axios.post(baseUrl, userObject);\n    return response.data;\n}\n\nexport default { getUsers, addUser };","import userService from '../services/Users'\nimport { createHTTPErrAction } from './errorReducer'\n\n/**\n * Reducer\n */\nconst usersReducer = (state = [], action) => {\n    console.log('Action:', action);\n    switch(action.type) {\n        case 'U_SET':\n            return action.data;\n        default:\n            return state;\n    }\n}\n\n/**\n * Action Creator\n */\n\nconst set_action = (users) => {\n    return {\n        type: 'U_SET',\n        data: users\n    }\n}\n\nexport const fetchUStore = () => {\n    return (dispatch) => {\n        userService.getUsers()\n            .then(response => dispatch(set_action(response)))\n            .catch( err => dispatch(createHTTPErrAction(err)));\n    }\n}\n\nexport default usersReducer;","import  {createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport personReducer from './personReducer';\nimport errorReducer from './errorReducer';\nimport notifReducer from './notifReducer';\nimport usersReducer from './usersReducer';\n\nconst reducers = combineReducers({\n    people: personReducer,\n    error: errorReducer,\n    notification: notifReducer,\n    users: usersReducer\n});\nconst personStore = createStore(\n    reducers,\n    applyMiddleware(thunk)\n);\nconsole.log('State:', personStore.getState());\n\nexport default personStore;","\nimport personService from '../services/Persons';\nimport store from '../reducers/store'\nimport { createErrAction } from '../reducers/errorReducer';\nimport { createNotif } from '../reducers/notifReducer';\nimport { fetchPStore } from '../reducers/personReducer';\n\n/**\n * Event Handlers\n */\nexport const publishPerson = async (nPerson) => {\n    const people = store.getState().people;\n    const duplicate = people.filter(person => person.name === nPerson.name);\n    if(duplicate.length !== 0) { //if record exists\n        if(duplicate[0].number === nPerson.number) { //duplicate\n            store.dispatch(createErrAction(`${nPerson.name} is already added to phonebook.`));\n        } else { //update number\n            const confirmation = window.confirm(`Update ${nPerson.name}'s number with ${nPerson.number}?`);\n            if(confirmation) {\n                console.log('Updating new number');\n                try{\n                    const r = await personService.update(duplicate[0].id, nPerson);\n                    store.dispatch(fetchPStore());\n                    store.dispatch(createNotif(`${r.name}'s number has been updated`));\n                } catch (err) {\n                    console.log(err);\n                    store.dispatch(createErrAction(`Update unsuccessful: ${err}`));\n                }\n            }\n        }\n    } else {    // add new record\n        try{\n            const r = await personService.create(nPerson);\n            store.dispatch(fetchPStore());\n            store.dispatch(createNotif(`${r.name} has been added`));\n        } catch (err) {\n            console.log(err);\n            store.dispatch(createErrAction(`${nPerson.name} could not be added: ${err}`));\n        }\n    }\n}\n\nexport const deletePerson = async (id) => {\n    const people = store.getState().people;\n\n    const person = people.find(element => element.id === id);\n    if(!person) {\n        store.dispatch(createErrAction('Does not exist'));\n    }\n    const result = window.confirm(`Delete ${person.name}'s record?`);\n    if(result) {\n        console.log('Deleting: ', id, person.name);\n        try {\n            await personService.remove(id);\n            store.dispatch(fetchPStore());\n            store.dispatch(createNotif('Successfully Deleted'));\n        } catch (err) {\n            store.dispatch(createErrAction(`${err}`));\n        }\n    }\n}","import React, { useState } from 'react';\nimport Filter from './Filter';\nimport { deletePerson } from '../handlers/personHandler';\nimport { Table } from 'react-bootstrap'\n\nconst People = ({persons = []}) => {\n    const [ filter, setNewFilter ] = useState(''); // filter\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value);\n    }\n\n    let newPersons = persons;\n    if(filter !== \"\") {\n        newPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())); \n    }\n    return (\n        <div>\n            <Table striped><tbody>\n                    {newPersons.map((person) =>\n                        <tr key={person.name}>\n                            <td>\n                                {person.name}\n                            </td>\n                            <td>\n                                {person.number}\n                            </td>\n                            <td>\n                                <button onClick={() => deletePerson(person.id)}>delete</button>\n                            </td>\n                        </tr>\n                    )}\n            </tbody></Table>\n            <Filter input={filter} inputHandler={handleFilterChange}/>\n        </div>\n        \n    )\n}\n\nexport default People","import React from 'react';\nimport store from '../reducers/store';\n\n\nconst Notification = () => {\n    const message = store.getState().notification;\n    if(message === '') {\n        return null;\n    }\n\n    return (\n        <div className='notification'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react'\nimport store from '../reducers/store';\n\nconst Error = ({message}) => {\n    const errState = store.getState().error;\n\n    if(errState === '') {\n        return null;\n    }\n    \n\n    return (\n        <div className='error'>\n            {errState}\n        </div>\n    )\n}\n\nexport default Error;","import React from 'react'\nimport { Form } from 'react-bootstrap'\n\nconst FormField = ({title, input, inputHandler}) => {\n    return (\n        <Form.Group>\n            <Form.Label>{title}</Form.Label>\n            <Form.Control\n                type='text'\n                value={input}\n                onChange={inputHandler}\n            />\n        </Form.Group>\n    )\n}\n\nexport default FormField","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = (props) => {\n\n    //inline css\n    const hideWhenVisible = { display: props.visible ? 'none' : ''}\n    const showWhenVisible = { display: props.visible ? '' : 'none'}\n\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <Button onClick={props.toggleVisibility}>{props.buttonLabel}</Button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <Button onClick={props.toggleVisibility}>Cancel</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Togglable;","import React, {useState} from 'react'\nimport FormField from './FormField'\nimport Togglable from './Togglable'\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = ({login}) => {\n    const [ username, setUsername ] = useState(''); // form input username\n    const [ password, setPassword ] = useState('');\n\n    const [ visible, setVisible ] = useState(false);\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    }\n\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        console.log('Logging in for', username);\n\n        login({\n            username: username,\n            password: password\n        });\n\n        setUsername('');\n        setPassword('');\n\n        toggleVisibility();\n\n    }\n\n    return (\n        <Togglable buttonLabel='Login here' visible={visible} toggleVisibility={toggleVisibility}>\n            <Form onSubmit={handleLogin}>\n                <FormField title={'Username'} input={username} inputHandler={handleUsernameChange}/>\n                <FormField title={'Password'} input={password} inputHandler={handlePasswordChange}/>\n                <Button type='submit'>Login</Button>\n            </Form>\n        </Togglable>\n    )\n}\n\nexport default LoginForm","import React, {useState} from 'react'\nimport FormField from './FormField'\nimport Togglable from './Togglable'\nimport { publishPerson } from '../handlers/personHandler';\nimport { Form, Button } from 'react-bootstrap'\n\nconst PersonForm = ({user}) => {\n    const [ newName, setNewName ] = useState(''); // form input name\n    const [ newNumber, setNewNumber ] = useState(''); // form input number\n\n    const [ visible, setVisible ] = useState(false);\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n\n    const createPerson = (event) => {\n        event.preventDefault();\n        publishPerson({ \n            name: newName,\n            number: newNumber\n        });\n\n        setNewName('');\n        setNewNumber('');\n\n    }\n    \n    return (\n        <Togglable buttonLabel='Create New Note' visible={visible} toggleVisibility={toggleVisibility}>\n            <h2>Add New as {user.name}:</h2>\n            <Form onSubmit={createPerson}>\n                <FormField title=\"Name\" input={newName} inputHandler={handleNameChange} />\n                <FormField title=\"Number\" input={newNumber} inputHandler={handleNumberChange} />          \n                <Button type=\"submit\">add</Button>\n            </Form>\n        </Togglable>\n    )\n}\n\nexport default PersonForm","import React, {useState} from 'react'\nimport FormField from './FormField'\nimport Togglable from './Togglable'\nimport { Form, Button } from 'react-bootstrap'\nimport userService from '../services/Users'\n\nconst UserForm = () => {\n    const [ newName, setNewName ] = useState(''); \n    const [ newUsername, setNewUsername ] = useState(''); \n    const [ newPassword, setNewPassword ] = useState('');\n\n    const [ visible, setVisible ] = useState(false);\n    const toggleVisibility = () => {\n        setVisible(!visible);\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n\n    const handleUsernameChange = (event) => {\n        setNewUsername(event.target.value);\n    }\n\n    const handlePasswordChange = (event) => {\n        setNewPassword(event.target.value);\n    }\n\n    const createUser = (event) => {\n        event.preventDefault();\n        \n        userService.addUser({\n            name: newName,\n            username: newUsername,\n            password: newPassword\n        });\n\n        setNewName('');\n        setNewUsername('');\n        setNewPassword('');\n\n        toggleVisibility();\n\n    }\n    \n    return (\n        <div>\n            <Togglable buttonLabel='Create User Account' visible={visible} toggleVisibility={toggleVisibility}>\n                <h2>Create new user</h2>\n                <Form onSubmit={createUser}>\n                    <FormField title=\"Name\" input={newName} inputHandler={handleNameChange} />\n                    <FormField title=\"Username\" input={newUsername} inputHandler={handleUsernameChange} />\n                    <FormField title=\"Password\" input={newPassword} inputHandler={handlePasswordChange} />  \n                    <Button type=\"submit\">add</Button>\n                </Form>\n            </Togglable>\n        </div>\n        \n    )\n}\n\nexport default UserForm","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async creds => {\n    const res = await axios.post(baseUrl, creds);\n    return res.data;\n}\n\nexport default { login };","import React, { useState, useEffect } from 'react'\nimport People from './components/People'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport LoginForm from './components/LoginForm'\nimport PersonForm from './components/PersonForm'\nimport UserForm from './components/UserForm'\n\nimport personService from './services/Persons'\nimport loginService from './services/Login'\n\nimport store from './reducers/store';\nimport { fetchPStore } from './reducers/personReducer'\nimport { createErrAction } from './reducers/errorReducer';\nimport { createNotif } from './reducers/notifReducer';\nimport { fetchUStore } from './reducers/usersReducer'\n\nimport { Button } from 'react-bootstrap'\n\n\nconst App = () => {\n\n    const [ user, setUser ] = useState(null);\n\n    //uses username and password to login, then saves the retrieved token and user details to 'user' field\n    const login = async (creds) => {\n\n        try{\n            const user = await loginService.login(creds);\n\n            //save token to local storage\n            window.localStorage.setItem(\n                'loggedPersonUser', JSON.stringify(user)\n            );\n            personService.setToken(user.token);\n            setUser(user);\n            store.dispatch(createNotif(`Logged in as ${user.name}`));\n        } catch (ex) {\n            store.dispatch(createErrAction('Wrong Credentials'));\n        }\n\n        \n    }\n    const logOut = () => {\n        window.localStorage.removeItem('loggedPersonUser');\n        personService.setToken(null);\n        setUser(null);\n        store.dispatch(createNotif('Logged Out'));\n    }\n\n    /**\n     * Effects\n     */\n    //initial fetching of persons\n    useEffect(() => {\n        console.log('Fetching data ... ');\n        store.dispatch(fetchPStore());\n        store.dispatch(fetchUStore());\n    }, []) // empty array tells it to only run initially\n\n    //check for logged in user\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedPersonUser');\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON);\n            setUser(user);\n            store.dispatch(createNotif(`Logged in as ${user.name}`));\n            personService.setToken(user.token)\n        }\n    }, [])\n\n    return (\n        <div className='container'>\n            <h2>Phonebook</h2>\n            <Notification/>\n            <Error/>\n            {user === null ?\n                <div>\n                    <LoginForm login={login} />\n                    <UserForm/>\n                    <h2>Please log in to view numbers</h2>\n                </div>\n                :\n                <div>\n                    <PersonForm user={user}/>\n                    <Button onClick={logOut}>Log Out</Button>\n                    <h2>Numbers</h2>\n                    <People persons={store.getState().people}/>\n                </div>}\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport { Provider } from 'react-redux';\nimport personStore from './reducers/store';\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={personStore}>\n            <App/>\n        </Provider>\n        , document.getElementById('root'));\n}\n\nrenderApp();\npersonStore.subscribe(renderApp);"],"sourceRoot":""}